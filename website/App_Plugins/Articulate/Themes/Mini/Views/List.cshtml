@using Articulate
@using Umbraco.Extensions

@model global::Articulate.Models.ListModel
@{
    Layout = "Master.cshtml";
}

<div class="container">

    <!-- HEADER COLUMN --->
    <div class="header-col">
        <header>
            @await Html.ThemedPartialAsync(Model, "Header")
        </header>
    </div>

    <!--- MAIN COLUMN --->
    <div class="main-col">
        @if (!Model.Children.Any())
        {
            <article>No blog posts found</article>
        }
        else
        {
            foreach (var post in Model.Posts)
            {
                <div class="post-entry post-list">
                    <article role="article" itemscope itemtype="http://schema.org/Article">
                        <div class="post-side">
                            <time datetime="@post.PublishedDate.ToString("yyyy MMM dd")" itemprop="datePublished" class="post-date">
                                <span class="year">@post.PublishedDate.ToString("yyyy")</span>
                                <span class="datetime-month">@post.PublishedDate.ToString("MMM")</span><br>
                                <span class="datetime-day">@post.PublishedDate.ToString("dd")</span>
                            </time>
                        </div>
                        <div class="post-main">
                            <a href="@post.Url()" class="post-list-link">
                                <div>
                                    <h2>@post.Name</h2>
                                    @if (post.PostImage != null)
                                    {
                                        var thumbnail = post.PostImage.GetCropUrl("thumbnail");
                                        if (thumbnail != null)
                                        {
                                            <img class="thumb" src="@thumbnail" alt="@post.Name" />
                                        }
                                    }
                                    @post.Excerpt
                                    <span class="readmore">
                                        <i class="fa fa-plus-square plus-sign"></i>
                                        <span class="readmore-hover">READMORE</span>
                                    </span>
                                </div>
                            </a>
                            <div class="post-info">
                                
                                @if (post.Tags.Any())
                                {
                                    <div class="tags">
                                        <i class="fa fa-tags fa-lg"></i>
                                        @await Html.ThemedPartialAsync(Model, "PostTags", post)
                                    </div>    
                                }

                            </div>
                        </div>
                    </article>
                </div>
            }
        }
        
        @await Html.ThemedPartialAsync(Model, "Pager", Model.Pages)
        
        @await Html.ThemedPartialAsync(Model, "Footer")

    </div>
</div>
